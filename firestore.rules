service cloud.firestore {
  match /databases/{database}/documents {
    function isAuth() {
    		return (request.auth.uid != null)
    }
    
    match /{documents=**} {
    		allow read: if false
    		allow write: if false
    }
    
    match /households/{householdId} {
    	
      function isHouseholdAdmin()
      {
      		return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.households.pivot.role == "admin"
      }
      
      function isResident()
      {
          return resource.data.users.keys().hasAll([request.auth.uid])
      }

			allow create: if isAuth()
      							&& request.resource.data.keys().hasAll(["users"])
                    && request.resource.data.users.keys().hasOnly([request.auth.uid])
                    && request.resource.data.users[request.auth.uid] == true
                
      allow read: if isAuth() && isResident()

			allow update: if isAuth()
          					&& (
                    	!request.resource.data.keys().hasAll(["users"])
                		|| isHouseholdAdmin())

      allow delete: if false
    }
    
    match /users/{userId} {
      allow read: if isAuth()
      allow update: if isAuth()
	  }
  }
}